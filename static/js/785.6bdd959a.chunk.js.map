{"version":3,"file":"static/js/785.6bdd959a.chunk.js","mappings":"8LAoCA,UAhCgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAAII,MAAK,SAAAC,GAAQ,aACjCN,EAAe,iBAACM,QAAD,IAACA,OAAD,EAACA,EAAUC,eAAX,QAAsB,GADJ,GAGpC,GAAE,CAACN,KAGF,+BACE,2BACGF,EAAaS,OAAS,IACrB,wBACGT,EAAaU,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OAChB,2BACE,wBAAKA,KACL,uBAAID,MAFGT,EADO,MASG,IAAxBF,EAAaS,SACZ,wEAKT,C,8LChCKI,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,qCAAwCF,IAF5D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCC,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EACTY,MAAOJ,EACPK,KAAM,IAJH,kBAOoBX,EAAAA,EAAAA,IAAA,uBAA0BO,IAP9C,uBAOKN,EAPL,EAOKA,KAPL,kBAQIA,GARJ,gCAUHC,QAAQC,IAAI,KAAMC,SAVf,gFAcA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAEoBb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,oBAAsCf,IAF1D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,kGAEoBb,EAAAA,EAAAA,IAAA,gBACZa,EADY,4BACef,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAAiCuB,GAAjC,kGAEoBb,EAAAA,EAAAA,IAAA,gBACZa,EADY,4BACef,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFA7CPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Reviews/Reviews.js","services/movieApi.js"],"sourcesContent":["import { fetchMovieReviews } from '../../services/movieApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(id).then(response =>\n      setMovieReviews(response?.results ?? [])\n    );\n  }, [id]);\n\n  return (\n    <>\n      <div>\n        {movieReviews.length > 0 && (\n          <ul>\n            {movieReviews.map(({ id, content, author }) => (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {movieReviews.length === 0 && (\n          <p>There are no reviews for this movie yet.</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '9ef3e3eeb008aebbe13a5411b7b0eb81';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchSearch(searchQuery) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: searchQuery,\n    page: 1,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${searchParams}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["useState","movieReviews","setMovieReviews","id","useParams","useEffect","fetchMovieReviews","then","response","results","length","map","content","author","API_KEY","fetchTrending","axios","data","console","log","message","fetchSearch","searchQuery","searchParams","URLSearchParams","api_key","query","page","fetchMovieById","movieId","fetchMovieCast"],"sourceRoot":""}