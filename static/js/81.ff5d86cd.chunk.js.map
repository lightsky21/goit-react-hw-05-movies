{"version":3,"file":"static/js/81.ff5d86cd.chunk.js","mappings":"qPAEaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iP,SCAVE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,SAACL,EAAD,CAAYI,GAAIA,EAAhB,SAEGC,GAGN,E,SCPYC,EAAUL,EAAAA,GAAAA,IAAH,oFAKPM,EAAQN,EAAAA,GAAAA,GAAH,4CAGLO,EAASP,EAAAA,GAAAA,IAAH,2CAINQ,GAAUR,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sBCqDpB,EA7DqB,WAAO,IAAD,IACjBS,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,oBAAGL,EAASM,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAI7C,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeX,GAAIY,KAAKN,EACzB,GAAE,CAACN,KAEF,6BACE,SAACP,EAAD,CAAUC,GAAIa,EAAd,8BAECF,IACC,iCACE,UAACT,EAAD,YACE,SAACE,EAAD,CACEe,IAAG,yCAAoCR,EAAMS,aAC7CC,IAAKV,EAAMW,SAEb,4BACE,SAACnB,EAAD,oBAAWQ,EAAMW,MAAjB,aAA2BX,EAAMY,aAAaC,MAC5C,EACA,GAFF,QAKA,2BACE,yBACE,8CACkC,GAAhCb,EAAMc,aAAaC,QAAQ,GAD7B,UAIF,2BACE,oCACA,uBAAIf,EAAMgB,eAEZ,2BACE,qCACA,uBAAIhB,EAAMiB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,qBAKvD,2BACE,yBACE,SAAC,KAAD,CAAMhC,GAAG,OAAT,qBAGF,yBACE,SAACK,EAAD,CAASL,GAAG,UAAZ,2BAGJ,SAAC,EAAAiC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAMX,C,8LC/DKC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,qCAAwCF,IAF5D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCC,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EACTY,MAAOJ,EACPK,KAAM,IAJH,kBAOoBX,EAAAA,EAAAA,IAAA,uBAA0BO,IAP9C,uBAOKN,EAPL,EAOKA,KAPL,kBAQIA,GARJ,gCAUHC,QAAQC,IAAI,KAAMC,SAVf,gFAcA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BgC,GAA9B,kGAEoBZ,EAAAA,EAAAA,IAAA,gBAAmBY,EAAnB,oBAAsCd,IAF1D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,kGAEoBZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACed,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,kGAEoBZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACed,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFA7CPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/movieApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      {/* <HiArrowLeft size=\"24\" /> */}\n      {children}\n    </StyledLink>\n  );\n};\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const Wrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  margin-bottom: 20px;\n`;\nexport const Title = styled.h1`\n  font-size: 25px;\n`;\nexport const Poster = styled.img`\n  display: block;\n`;\n\nexport const NavItem = styled(NavLink)``;\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { fetchMovieById } from '../../services/movieApi';\nimport { Wrapper, Title, Poster, NavItem } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    fetchMovieById(id).then(setMovie);\n  }, [id]);\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Back to products</BackLink>\n\n      {movie && (\n        <>\n          <Wrapper>\n            <Poster\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div>\n              <Title>{`${movie.title} (${movie.release_date.slice(\n                0,\n                4\n              )})`}</Title>\n\n              <ul>\n                <li>\n                  <h3>{`User score: ${\n                    movie.vote_average.toFixed(2) * 10\n                  }%`}</h3>\n                </li>\n                <li>\n                  <h3>About:</h3>\n                  <p>{movie.overview}</p>\n                </li>\n                <li>\n                  <h3>Genres:</h3>\n                  <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n                </li>\n              </ul>\n            </div>\n          </Wrapper>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n\n            <li>\n              <NavItem to=\"reviews\">Reviews</NavItem>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '9ef3e3eeb008aebbe13a5411b7b0eb81';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchSearch(searchQuery) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: searchQuery,\n    page: 1,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${searchParams}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["StyledLink","styled","NavLink","BackLink","to","children","Wrapper","Title","Poster","NavItem","id","useParams","location","useLocation","useState","movie","setMovie","backLinkHref","state","from","useEffect","fetchMovieById","then","src","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","genre","name","join","Suspense","fallback","API_KEY","fetchTrending","axios","data","console","log","message","fetchSearch","searchQuery","searchParams","URLSearchParams","api_key","query","page","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}