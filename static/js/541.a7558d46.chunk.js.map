{"version":3,"file":"static/js/541.a7558d46.chunk.js","mappings":"8LAmCA,UA/Ba,WACX,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAAII,MAAK,SAAAC,GAAQ,aAAIN,EAAY,iBAACM,QAAD,IAACA,OAAD,EAACA,EAAUC,YAAX,QAAmB,KAAnC,GACjC,GAAE,CAACN,KAGF,+BACE,2BACGF,IACC,wBACGA,EAAUS,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACb,2BACE,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKH,KAEP,uBAAIA,MALGR,EADI,OAYjBF,IAAa,wEAItB,C,8LC/BKc,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,qCAAwCF,IAF5D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCC,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EACTY,MAAOJ,EACPK,KAAM,IAJH,kBAOoBX,EAAAA,EAAAA,IAAA,uBAA0BO,IAP9C,uBAOKN,EAPL,EAOKA,KAPL,kBAQIA,GARJ,gCAUHC,QAAQC,IAAI,KAAMC,SAVf,gFAcA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAEoBb,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,oBAAsCf,IAF1D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAA8BwB,GAA9B,kGAEoBb,EAAAA,EAAAA,IAAA,gBACZa,EADY,4BACef,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,kGAEoBb,EAAAA,EAAAA,IAAA,gBACZa,EADY,4BACef,IAHnC,uBAEKG,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAR,MAPG,gFA7CPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.js","services/movieApi.js"],"sourcesContent":["import { fetchMovieCast } from '../../services/movieApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(id).then(response => setMovieCast(response?.cast ?? null));\n  }, [id]);\n\n  return (\n    <>\n      <div>\n        {movieCast && (\n          <ul>\n            {movieCast.map(({ id, name, profile_path }) => (\n              <li key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                  alt={name}\n                />\n                <p>{name}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {!movieCast && <p>There are no reviews for this movie yet.</p>}\n      </div>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '9ef3e3eeb008aebbe13a5411b7b0eb81';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchSearch(searchQuery) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: searchQuery,\n    page: 1,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${searchParams}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["useState","movieCast","setMovieCast","id","useParams","useEffect","fetchMovieCast","then","response","cast","map","name","profile_path","src","alt","API_KEY","fetchTrending","axios","data","console","log","message","fetchSearch","searchQuery","searchParams","URLSearchParams","api_key","query","page","fetchMovieById","movieId","fetchMovieReviews"],"sourceRoot":""}